{
  "env": { // 어떤 환경에서 돌아가는지를 알려줌
    "es6": true,
    "browser": true
  },
  "parser": "@typescript-eslint/parser", // 코드를 분석해서 에러를 발생시켜줌
  "plugins": [ // eslint가 기본적으로 제공하는 규칙들을 더 추가할 수 있게 해줌
    "prettier", 
    "import",
    "react",
    "react-hooks",
    "jsx-a11y"
  ],
  "extends": [ // 다른 설정 파일을 상속받아 사용할 때 지정함. 
    "prettier",
    "plugin:@typescript-eslint/recommended"
  ],
  "rules": { // eslint가 기본적으로 제공하는 규칙들을 더 추가할 수 있게 해줌
    "no-unused-vars": "off", // 사용하지 않는 변수 설정해줌
    "prettier/prettier": [ // prettier 설정해줌
      "error",
      {
        "endOfLine": "auto" // 줄바꿈을 어떻게 할지 설정해줌
      }
    ],
    "@typescript-eslint/no-unused-vars": "error", // typescript에서 사용하지 않는 변수 설정해줌
    "@typescript-eslint/no-useless-constructor": "error", // typescript에서 생성자가 필요없는 경우 에러를 발생시킴
    "import/no-unresolved": "error", // import를 할때 경로가 잘못되었을 경우 에러를 발생시킴
    "import/prefer-default-export": "off", // export default를 사용하지 않아도 에러를 발생시키지 않음
    "import/order": [ // import를 할때 순서를 정해줌
      "error",
      {
        "pathGroups": [
          {
            "pattern": "{next*,next*/**}", // next로 시작하는 모든 경로를 next로 묶어줌
            "group": "external", // external로 묶어줌
            "position": "before" // external로 묶어준 경로는 가장 앞에 위치하도록 설정
          },
          {
            "pattern": "{react*,react*/**}",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "[@]/**",
            "group": "internal",
            "position": "after"
          }
        ],
        "groups": [ // import를 할때 그룹을 정해줌
          "type",
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "unknown"
        ],
        "pathGroupsExcludedImportTypes": [ // import를 할때 경로를 묶어주지 않을 타입을 정해줌
          "react"
        ],
        "newlines-between": "always" // import를 할때 경로를 묶어줄때 빈줄을 넣어줌 
      }
    ],
    "react/jsx-filename-extension": [ // jsx를 사용할때 확장자를 설정해줌
      "warn", 
      {
        "extensions": [ 
          ".tsx" 
        ]
      }
    ],
    "react/jsx-no-target-blank": "error", // target="_blank"를 사용할때 rel="noreferrer noopener"를 사용하도록 설정해줌
    "react/jsx-no-useless-fragment": "warn", // 불필요한 fragment를 사용할때 경고를 발생시킴
    "react/prop-types": "off", // prop-types를 사용하지 않아도 에러를 발생시키지 않음
    "react-hooks/rules-of-hooks": "error", // react hooks를 사용할때 순서를 지키지 않았을때 에러를 발생시킴
    "react-hooks/exhaustive-deps": "error" // react hooks를 사용할때 의존성 배열을 정확하게 지키지 않았을때 에러를 발생시킴
  },
  "overrides": [ // 특정 파일에 대해서만 규칙을 적용함
    {
      "files": [ 
        "**/*.ts?(x)" 
      ],
      "parser": "@typescript-eslint/parser", 
      "parserOptions": { // typescript를 사용할때 설정해줌
        "project": [
          "./tsconfig.json",
          "./tsconfig.eslint.json",
          "./tsconfig.node.json"
        ]
      },
      "extends": [ 
        "plugin:@typescript-eslint/recommended" 
      ],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off", // typescript에서 함수의 반환값을 명시하지 않아도 에러를 발생시키지 않음
        "@typescript-eslint/no-floating-promises": "off", // typescript에서 비동기 함수를 사용할때 에러를 발생시키지 않음
        "@typescript-eslint/no-unused-vars": "warn", // typescript에서 사용하지 않는 변수를 경고를 발생시킴
        "@typescript-eslint/no-use-before-define": [ // typescript에서 변수를 사용하기 전에 선언해야함
          "error",
          {
            "variables": false
          }
        ],
        "@typescript-eslint/no-useless-constructor": "error", // typescript에서 생성자가 필요없는 경우 에러를 발생시킴
        "@typescript-eslint/no-misused-promises": "off", 
        "@typescript-eslint/require-await": "error" // typescript에서 비동기 함수를 사용할때 await를 사용해야함
      }
    }
  ],
  "settings": { 
    "react": { // react를 사용할때 설정해줌
      "version": "detect" // react 버전을 자동으로 감지함
    },
    "import/parsers": {  // import를 사용할때 설정해줌
      "@typescript-eslint/parser": [ // typescript를 사용할때 설정해줌
        ".ts",
        ".tsx"
      ]
    }, 
    "import/extensions": [ // import를 사용할때 확장자를 설정해줌
      ".js",
      ".jsx",
      ".ts",
      ".tsx"
    ],
    "import/resolver": {
      "typescript": {}
    }
  }
}